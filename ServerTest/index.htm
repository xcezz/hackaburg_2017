<!DOCTYPE html>
<html>
    <head>
        <title>Node.js Chat</title>
        <meta charset="utf-8">
        <script src="static/leap-0.6.4.js"></script>
        <script src="static/lib/leap-plugins-0.1.6.js"></script>
        <script src="static/lib/three.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.3/socket.io.js"></script>
        <script src="http://code.jquery.com/jquery-latest.min.js"></script>
    </head>
    <body>
        <header>Node.js Chat <a href="http://nodecode.de/">von NodeCode</a></header>
        <ul id="content"></ul>
        <footer>
            <input id="name" type="text" placeholder="dein Name" />
            <input id="text" type="text" placeholder="schreibe etwas..." />
            <input id="senden" type="submit" value="senden" />
        </footer>
        <script>
            $(document).ready(function(){
                // WebSocket
                var socket = io.connect();
                // neue Nachricht
                socket.on('chat', function (data) {
                    var zeit = new Date(data.zeit);
                    $('#content').append(
                        $('<li></li>').append(
                            // Uhrzeit
                            $('<span>').text('[' +
                                (zeit.getHours() < 10 ? '0' + zeit.getHours() : zeit.getHours())
                                + ':' +
                                (zeit.getMinutes() < 10 ? '0' + zeit.getMinutes() : zeit.getMinutes())
                                + '] '
                            ),
                            // Name
                            $('<b>').text(typeof(data.name) != 'undefined' ? data.name + ': ' : ''),
                            // Text
                            $('<span>').text(data.text))
                    );
                    // nach unten scrollen
                    $('body').scrollTop($('body')[0].scrollHeight);
                });
                socket.on('data', function (data) {
                    console.log(data);
                });
                
                // Nachricht senden
                function senden(){
                    // Eingabefelder auslesen
                    var name = $('#name').val();
                    var text = $('#text').val();
                    // Socket senden
                    socket.emit('chat', { name: name, text: text });
                    // Text-Eingabe leeren
                    $('#text').val('');
                }
                // bei einem Klick
                $('#senden').click(senden);
                // oder mit der Enter-Taste
                $('#text').keypress(function (e) {
                    if (e.which == 13) {
                        senden();
                    }
                });
                
                var ws;

                // Support both the WebSocket and MozWebSocket objects
                if ((typeof(WebSocket) == 'undefined') &&
                    (typeof(MozWebSocket) != 'undefined')) {
                  WebSocket = MozWebSocket;
                }

                // Create the socket with event handlers
                function connectToWebSocket() {
                  // Create and open the socket
                  ws = new WebSocket("ws://localhost:6437/v4.json");

                  // On successful connection
                  ws.onopen = function(event) {
                    var enableMessage = JSON.stringify({enableGestures: true});
                    ws.send(enableMessage); // Enable gestures
                    var backgroundMessage = JSON.stringify({background: true});
                    ws.send(backgroundMessage); // Get frames in background
                    console.log("open");
                  };

                  // On message received
                  ws.onmessage = function(event) {
                      var obj = JSON.parse(event.data);
                      var str = JSON.stringify(obj, undefined, 2);
                      socket.emit('data', obj);                
                  };

                  // On socket close
                  ws.onclose = function(event) {
                    ws = null;
                    console.log("close");
                  }

                  // On socket error
                  ws.onerror = function(event) {
                    console.log("error");
                  };
                }

                connectToWebSocket();
            });
        </script>
    </body>
</html>